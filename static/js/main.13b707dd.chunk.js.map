{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","React","memo","user","className","href","TodoInfo","todo","TodoList","todoList","map","todoItem","userInfo","usersFromServer","find","item","App","useState","setTitle","userName","setUserName","todosFromServer","setTodoList","warningTitle","setWarningTitle","warningUser","setWarningUser","action","method","onSubmit","e","preventDefault","status","userItem","length","prev","type","placeholder","value","onChange","event","target","disabled","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13b707dd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-console */\nimport React from 'react';\nimport { UserInfoProps } from './type';\n\nexport const UserInfo: React.FC<UserInfoProps> = React.memo(({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n});\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { TodoInfoProps } from './type';\n\nexport const TodoInfo:React.FC<TodoInfoProps> = React.memo(({ todo, user }) => {\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      <UserInfo user={user} />\n    </article>\n  );\n});\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport usersFromServer from '../../api/users';\nimport { TodoListProps } from './type';\nimport { User } from '../../interfaces';\n\nexport const TodoList: React.FC<TodoListProps> = React.memo(({ todoList }) => {\n  return (\n    <section className=\"TodoList\">\n      {todoList.map(todoItem => {\n        const userInfo = usersFromServer\n          .find(item => item.id === todoItem.userId) as User;\n\n        return (\n          <TodoInfo\n            todo={todoItem}\n            key={todoItem.id}\n            user={userInfo}\n          />\n        );\n      })}\n    </section>\n  );\n});\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [todoList, setTodoList] = useState([...todosFromServer]);\n  const [warningTitle, setWarningTitle] = useState(false);\n  const [warningUser, setWarningUser] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        // eslint-disable-next-line consistent-return\n        onSubmit={(e) => {\n          e.preventDefault();\n\n          let status = false;\n\n          if (!userName) {\n            status = true;\n\n            setWarningUser(true);\n          }\n\n          if (!title) {\n            status = true;\n\n            setWarningTitle(true);\n          }\n\n          if (status) {\n            return;\n          }\n\n          const user = [...usersFromServer].find(\n            (userItem) => userItem.name === userName,\n          );\n\n          if (user) {\n            const todo = {\n              id: todoList.length,\n              title,\n              completed: true,\n              userId: user.id,\n            };\n\n            setWarningUser(false);\n            setWarningTitle(false);\n            setTodoList((prev) => [...prev, todo]);\n            setUserName('');\n            setTitle('');\n          }\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(() => event.target.value);\n                setWarningTitle(false);\n              }}\n            />\n            {warningTitle && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userName}\n              onChange={(e) => {\n                setUserName(e.target.value);\n                setWarningUser(false);\n              }}\n            >\n              <option value=\"\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map((user) => (\n                <option value={`${user.name}`} key={user.id}>\n                  {`${user.name}`}\n                </option>\n              ))}\n            </select>\n          </label>\n          {warningUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todoList={todoList} users={usersFromServer} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}